# vim: set ft=yaml ts=4 sw=4 tw=0 et:
kind: "BuildConfig"
apiVersion: "v1"
metadata:
  name: "build-openshift-installer"
spec:
  strategy:
    jenkinsPipelineStrategy:
      jenkinsfile: |-
        // name of the template that will be created
        def templateName = 'build-openshift-installer'
        // NOTE, the "pipeline" directive/closure from the declarative pipeline syntax needs to include, or be nested outside,
        // and "openshift" directive/closure from the OpenShift Client Plugin for Jenkins.  Otherwise, the declarative pipeline engine
        // will not be fully engaged.
        pipeline {
            agent {
              node {
                label 'openshift-install-builder'
              }
            }
            options {
                // set a timeout of 20 minutes for this pipeline
                timeout(time: 20, unit: 'MINUTES')
            }

            stages {
                stage('preamble') {
                    steps {
                        script {
                            openshift.withCluster() {
                                openshift.withProject() {
                                    echo "Using project: ${openshift.project()}"
                                }
                            }
                        }
                    }
                } // stage preamble
                stage('setup') {
                    steps {
                        script {
                            openshift.withCluster() {
                                openshift.withProject() {
                                    sh "mkdir -p /go/src/github.com/openshift/installer"
                                    sh "git clone https://github.com/openshift/installer /go/src/github.com/openshift/installer/"
                                    //sh "cp -R /go/src/github.com/openshift/installer/vendor/* /go/src/"
                                }
                            }
                        }
                    }
                } // stage setup
                stage('build') {
                    steps {
                        script {
                            openshift.withCluster() {
                                openshift.withProject() {
                                    //sh "go generate github.com/openshift/installer/data"
                                    //sh "CGO_ENABLED=1 go build -ldflags ' -X main.version=v0.2.0' -tags ' release' -o /go/bin/openshift-install github.com/openshift/installer/cmd/openshift-install"
                                    dir("/go/src/github.com/openshift/installer") {
                                        sh "TAGS=libirt hack/build.sh"
                                    }
                                }
                            }
                        }
                    }
                }  // stage build
            } // stages
        } // pipeline
      type: JenkinsPipeline

